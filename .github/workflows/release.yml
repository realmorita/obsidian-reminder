name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: "The version of the plugin e.g. 1.0.0"
        required: true

env:
  PLUGIN_NAME: obsidian-reminder

jobs:
  gh-pages:
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: master

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "21"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build pages
        working-directory: ./docs
        run: |
          npm ci
          npm run build

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/src/.vuepress/dist

  release:
    runs-on: ubuntu-latest
    needs: gh-pages

    steps:
      - uses: actions/checkout@v2
        with:
          ref: master
      - name: Update the versions
        run: |
          version=${{ github.event.inputs.version }}
          echo "RELEASE_VERSION=$version" >> $GITHUB_ENV

          # update manifest version
          sed -i "s/\"version\": \".*\"/\"version\": \"$version\"/" manifest.json

          # commit and push the changes
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add manifest.json
          git commit -m "Update the version to $version"
          git push origin master
          git tag $version
          git push --tags
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "21"
      - name: Build
        id: build
        run: |
          npm ci
          npm run build
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          name: ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
          files: |
            ${{ env.PLUGIN_NAME }}.zip
            main.js
            manifest.json
            styles.css
